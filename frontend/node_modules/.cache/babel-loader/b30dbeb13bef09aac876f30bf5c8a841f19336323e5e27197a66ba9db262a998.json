{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080';\nconst authService = {\n  login: async credentials => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/login`, credentials);\n      return response.data; // Return the data from the API response\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      throw new Error(message); // Use API error message if available\n    }\n  },\n  register: async userData => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/register`, userData);\n      return response.data; // Return the data from the API response\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      throw new Error(message); // Use API error message if available\n    }\n  }\n};\nexport default authService;","map":{"version":3,"names":["axios","API_BASE_URL","authService","login","credentials","response","post","data","error","_error$response","_error$response$data","message","Error","register","userData","_error$response2","_error$response2$data"],"sources":["C:/Users/hario/OneDrive/Documents/CarRentals/car-rental/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080';\r\n\r\nconst authService = {\r\n  login: async (credentials) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/login`, credentials);\r\n      return response.data; // Return the data from the API response\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      throw new Error(message); // Use API error message if available\r\n    }\r\n  },\r\n\r\n  register: async (userData) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/register`, userData);\r\n      return response.data; // Return the data from the API response\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      throw new Error(message); // Use API error message if available\r\n    }\r\n  },\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,YAAY,QAAQ,EAAEG,WAAW,CAAC;MACvE,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd,MAAMC,OAAO,GAAG,EAAAF,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,cAAc;MAC/D,MAAM,IAAIC,KAAK,CAACD,OAAO,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC;EAEDE,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,YAAY,WAAW,EAAEa,QAAQ,CAAC;MACvE,OAAOT,QAAQ,CAACE,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAO,gBAAA,EAAAC,qBAAA;MACd,MAAML,OAAO,GAAG,EAAAI,gBAAA,GAAAP,KAAK,CAACH,QAAQ,cAAAU,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBR,IAAI,cAAAS,qBAAA,uBAApBA,qBAAA,CAAsBL,OAAO,KAAI,qBAAqB;MACtE,MAAM,IAAIC,KAAK,CAACD,OAAO,CAAC,CAAC,CAAC;IAC5B;EACF;AACF,CAAC;AAED,eAAeT,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}